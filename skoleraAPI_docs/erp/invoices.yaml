openapi: 3.1.0
x-stoplight:
  id: xojwrghhskrv0
info:
  title: invoices2
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  /api/invoices:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  Example 1:
                    students:
                      - id: 1
                        name: Ahmed Mohamed
                      - id: 2
                        name: Sara Ali
                    statuses:
                      - id: 1
                        name: Pending
                      - id: 2
                        name: Paid
                      - id: 3
                        name: Overdue
                    invoices:
                      - student_id: 1
                        invoice_number: INV-2024-001
                        total_amount: 1500
                        amount_due: 1000
                        due_date: '2024-03-15'
                        status_id: 1
                        last_updated_at: '2024-01-15T10:00:00Z'
                properties:
                  students:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                  statuses:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                  invoices:
                    type: array
                    items:
                      type: object
                      properties:
                        student_id:
                          type: integer
                        invoice_number:
                          type: string
                        total_amount:
                          type: number
                        amount_due:
                          type: number
                        due_date:
                          type: string
                        status_id:
                          type: integer
                        last_updated_at:
                          type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ../../Data/UnauthorizedError.yaml
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ../../Data/ForbiddenError.yaml
        '422':
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                $ref: ../../Data/ValidationError.yaml
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: ../../Data/InternalServerError.yaml
      operationId: get-api-invoices
      parameters:
        - schema:
            type: string
          in: query
          name: sort_by
          description: sorting
        - schema:
            type: string
          in: query
          name: 'q[number]'
          description: filtering
        - schema:
            type: string
          in: query
          name: page
          description: pagenation
        - schema:
            type: string
          in: query
          name: per_page
          description: pagenation
        - schema:
            type: string
          in: query
          name: 'q[due_date_from]'
          description: date
        - schema:
            type: string
          in: query
          name: 'q[due_data_to]'
          description: date
        - schema:
            type: string
          in: query
          name: sort_direction
          description: sorting
        - schema:
            type: string
          in: query
          name: 'q[status_id]'
        - schema:
            type: string
          in: query
          name: 'q[student_id]'
      description: |-
        Retrieve a list of invoices with support for sorting, filtering, pagination, and date range filtering. By default, invoices are filtered and sorted by due date in descending order.
        The response includes students and statuses lists for frontend dropdown filters, and invoices with reference IDs that map to these lists.
  /api/erp/invoices:
    post:
      summary: ''
      operationId: post-api-erp-invoices
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  Example 1:
                    id: 123
                    student_erp_id: 12345
                    number: INV-2024-001
                    total_amount: 1500
                    amount_due: 1500
                    due_date: '2024-03-15'
                    status_id: 1
                    currency_code: USD
                    erp_id: 456
                    created_at: '2024-01-15T10:00:00Z'
                properties:
                  student_erp_id:
                    type: integer
                  id:
                    type: integer
                  number:
                    type: string
                  total_amount:
                    type: number
                  amount_due:
                    type: number
                  due_date:
                    type: string
                  status_id:
                    type: integer
                  currency_code:
                    type: string
                  erp_id:
                    type: integer
                  created_at:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ../../Data/UnauthorizedError.yaml
                description: non authentication token
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ../../Data/ForbiddenError.yaml
                description: user ont have permission
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: ../../Data/ConflictError.yaml
                description: invoice number existing before
        '422':
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                $ref: ../../Data/ValidationError.yaml
                description: |-
                  Required fields missed (student_erp_id, number, total_amount, etc.)
                  Invalid data types
                  Negative amounts (total_amount, amount_due)
                  Invalid date format in due_date
                  Invalid status_id
                  Duplicate invoice number
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: ../../Data/InternalServerError.yaml
                description: Server error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                Example 1:
                  student_erp_id: ''
                  number: ''
                  total_amount: 0
                  amount_due: 0
                  due_date: ''
                  status: ''
                  currency_code: ''
                  erp_id: ''
              properties:
                student_erp_id:
                  type: integer
                number:
                  type: string
                total_amount:
                  type: number
                amount_due:
                  type: number
                due_date:
                  type: string
                status_id:
                  type: integer
                  x-stoplight:
                    id: qomaf2lbufrr0
                currency_code:
                  type: string
                erp_id:
                  type: integer
      description: Create/sync invoice from ERP system to LMS for real-time synchronization.
  '/api/erp/invoices/:erp_invoice_id/{erp_invoice_id}':
    patch:
      summary: ''
      operationId: 'patch-api-erp-invoices-:erp_invoice_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  student_erp_id:
                    type: integer
                  number:
                    type: string
                  total_amount:
                    type: integer
                  amount_due:
                    type: integer
                  due_date:
                    type: string
                  status_id:
                    type: integer
                  currency_code:
                    type: string
                  erp_id:
                    type: integer
                  updated_at:
                    type: string
                x-examples:
                  Example 1:
                    id: 123
                    student_erp_id: 12345
                    number: INV-2024-001
                    total_amount: 1500
                    amount_due: 1000
                    due_date: '2024-03-15'
                    status_id: 1
                    currency_code: USD
                    erp_id: 456
                    updated_at: '2024-01-15T11:00:00Z'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ../../Data/UnauthorizedError.yaml
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ../../Data/ForbiddenError.yaml
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: ../../Data/NotFoundError.yaml
        '422':
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                $ref: ../../Data/ValidationError.yaml
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: ../../Data/InternalServerError.yaml
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                Example 1:
                  id: 0
                  student_erp_id: 0
                  number: ''
                  total_amount: 0
                  amount_due: 0
                  due_date: ''
                  status_id: 0
                  currency_code: ''
                  erp_id: 0
                  updated_at: ''
              properties:
                id:
                  type: integer
                student_erp_id:
                  type: integer
                number:
                  type: string
                total_amount:
                  type: number
                amount_due:
                  type: number
                due_date:
                  type: string
                status_id:
                  type: integer
                currency_code:
                  type: string
                erp_id:
                  type: integer
                updated_at:
                  type: string
      description: ''
    parameters:
      - schema:
          type: string
        name: erp_invoice_id
        in: path
        required: true
        description: ERP Invoice ID
  '/api/erp/invoices/:erp_invoice_id/delete_or_cancel/{erp_invoice_id}':
    post:
      summary: ''
      operationId: 'post-api-erp-invoices-:erp_invoice_id-delete_or_cancel'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                x-examples:
                  Example 1:
                    message: ''
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ../../Data/UnauthorizedError.yaml
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ../../Data/ForbiddenError.yaml
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: ../../Data/NotFoundError.yaml
        '422':
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                $ref: ../../Data/ValidationError.yaml
                description: can't delete paid invoice
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: ../../Data/InternalServerError.yaml
      description: Delete draft invoices or cancel non-draft invoices.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                erp_id:
                  type: string
              x-examples:
                Example 1:
                  erp_id: ''
    parameters:
      - schema:
          type: string
        name: erp_invoice_id
        in: path
        required: true
components:
  schemas: {}
