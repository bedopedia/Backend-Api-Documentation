openapi: 3.1.0
x-stoplight:
  id: xojwrghhskrv0
info:
  title: invoices2
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  /api/invoices:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  Example 1:
                    students:
                      - id: 1
                        name: Ahmed Mohamed
                      - id: 2
                        name: Sara Ali
                    statuses:
                      - id: 1
                        name: Pending
                      - id: 2
                        name: Paid
                      - id: 3
                        name: Overdue
                    invoices:
                      - student_id: 1
                        invoice_number: INV-2024-001
                        total_amount: 1500
                        amount_due: 1000
                        due_date: '2024-03-15'
                        status_id: 1
                        last_updated_at: '2024-01-15T10:00:00Z'
                      - student_id: 2
                        invoice_number: INV-2024-002
                        total_amount: 2000
                        amount_due: 2000
                        due_date: '2024-03-20'
                        status_id: 2
                        last_updated_at: '2024-01-16T11:30:00Z'
                properties:
                  students:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                  statuses:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                  invoices:
                    type: array
                    items:
                      type: object
                      properties:
                        student_id:
                          type: integer
                        invoice_number:
                          type: string
                        total_amount:
                          type: number
                        amount_due:
                          type: number
                        due_date:
                          type: string
                          format: date
                        status_id:
                          type: integer
                        last_updated_at:
                          type: string
                          format: date
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ../../Data/UnauthorizedError.yaml
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ../../Data/ForbiddenError.yaml
      operationId: get-api-invoices
      parameters:
        - schema:
            type: string
          in: query
          name: sort_by
          description: sorting
        - schema:
            type: string
          in: query
          name: 'q[number]'
          description: filtering
        - schema:
            type: string
          in: query
          name: page
          description: pagenation
        - schema:
            type: string
          in: query
          name: per_page
          description: pagenation
        - schema:
            type: string
          in: query
          name: 'q[due_date_from]'
          description: date
        - schema:
            type: string
          in: query
          name: 'q[due_data_to]'
          description: date
        - schema:
            type: string
          in: query
          name: sort_direction
          description: sorting
        - schema:
            type: string
          in: query
          name: 'q[status_id]'
        - schema:
            type: string
          in: query
          name: 'q[student_id]'
        - schema:
            type: string
          in: query
          name: 'q[total_amount]'
        - schema:
            type: string
          in: query
          name: 'q[amount_due]'
      description: |-
        Retrieve a list of invoices with support for sorting, filtering, pagination, and date range filtering. By default, invoices are filtered and sorted by due date in descending order.
        The response includes students and statuses lists for frontend dropdown filters, and invoices with reference IDs that map to these lists.
  /api/erp/invoices:
    post:
      summary: ''
      operationId: post-api-erp-invoices
      responses:
        '201':
          description: Created
          content: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ../../Data/UnauthorizedError.yaml
                description: non authentication token
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ../../Data/ForbiddenError.yaml
                description: user ont have permission
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      student_erp_id:
                        type: array
                        items:
                          type: string
                      number:
                        type: array
                        items:
                          type: string
                      total_amount:
                        type: array
                        items:
                          type: string
                      amount_due:
                        type: array
                        items:
                          type: string
                      due_date:
                        type: array
                        items:
                          type: string
                      status_id:
                        type: array
                        items:
                          type: string
                      currency_code:
                        type: array
                        items:
                          type: string
                      erp_id:
                        type: array
                        items:
                          type: string
                x-examples:
                  Example 1:
                    errors:
                      student_erp_id:
                        - Student ERP ID is required
                      number:
                        - Invoice number must be unique
                        - Invoice number is required
                      total_amount:
                        - Total amount must be greater than 0
                      amount_due:
                        - Amount due cannot exceed total amount
                      due_date:
                        - Due date must be in format DD/MM/YYYY
                      status_id:
                        - Invalid status ID
                      currency_code:
                        - Currency code must be a valid ISO code
                      erp_id:
                        - ERP ID is required
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                Example 1:
                  student_erp_id: ''
                  number: ''
                  total_amount: 0
                  amount_due: 0
                  due_date: ''
                  status: ''
                  currency_code: ''
                  erp_id: ''
              properties:
                student_erp_id:
                  type: integer
                number:
                  type: string
                total_amount:
                  type: number
                amount_due:
                  type: number
                due_date:
                  type: string
                  format: date
                status_id:
                  type: integer
                  x-stoplight:
                    id: qomaf2lbufrr0
                currency_code:
                  type: string
                erp_id:
                  type: integer
      description: Create/sync invoice from ERP system to LMS for real-time synchronization.
  '/api/erp/invoices/{erp_invoice_id}':
    patch:
      summary: ''
      operationId: 'patch-api-erp-invoices-:erp_invoice_id'
      responses:
        '200':
          description: OK
          content: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ../../Data/UnauthorizedError.yaml
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ../../Data/ForbiddenError.yaml
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: ../../Data/NotFoundError.yaml
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      number:
                        type: array
                        items:
                          type: string
                      total_amount:
                        type: array
                        items:
                          type: string
                      amount_due:
                        type: array
                        items:
                          type: string
                      due_date:
                        type: array
                        items:
                          type: string
                      status_id:
                        type: array
                        items:
                          type: string
                      currency_code:
                        type: array
                        items:
                          type: string
                      erp_id:
                        type: array
                        items:
                          type: string
                      updated_at:
                        type: array
                        items:
                          type: string
                x-examples:
                  Example 1:
                    errors:
                      number:
                        - Invoice number must be unique
                        - Invoice number is required
                      total_amount:
                        - Total amount must be greater than 0
                      amount_due:
                        - Amount due cannot exceed total amount
                      due_date:
                        - Due date must be in format DD/MM/YYYY
                      status_id:
                        - Invalid status ID
                      currency_code:
                        - Currency code must be a valid ISO code
                      erp_id:
                        - ERP ID is required
                      updated_at:
                        - 'Updated At must be a valid datetime in format YYYY-MM-DD HH:MM:SS'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                Example 1:
                  id: 0
                  student_erp_id: 0
                  number: ''
                  total_amount: 0
                  amount_due: 0
                  due_date: ''
                  status_id: 0
                  currency_code: ''
                  erp_id: 0
                  updated_at: ''
              properties:
                number:
                  type: string
                total_amount:
                  type: number
                amount_due:
                  type: number
                due_date:
                  type: string
                  format: date
                status_id:
                  type: integer
                currency_code:
                  type: string
                erp_id:
                  type: integer
                updated_at:
                  type: string
      description: ''
    parameters:
      - schema:
          type: string
        name: erp_invoice_id
        in: path
        required: true
        description: ERP Invoice ID
  '/api/erp/invoices/{erp_invoice_id}/delete_or_cancel':
    post:
      summary: ''
      operationId: 'post-api-erp-invoices-:erp_invoice_id-delete_or_cancel'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                x-examples:
                  Example 1:
                    message: ''
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ../../Data/UnauthorizedError.yaml
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ../../Data/ForbiddenError.yaml
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: ../../Data/NotFoundError.yaml
      description: Delete draft invoices or cancel non-draft invoices.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                erp_id:
                  type: string
              x-examples:
                Example 1:
                  erp_id: ''
    parameters:
      - schema:
          type: string
        name: erp_invoice_id
        in: path
        required: true
components:
  schemas: {}
